//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Laparoscope.RpcServer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Laparoscope.RpcServer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $connector = @(Get-ADSyncConnector | ? Type -like &quot;Extensible2&quot; | ? Subtype -like &quot;Windows Azure Active Directory*&quot;)
        ///
        ///if ($connector.Count -gt 1) {
        ///    throw &quot;Unsupported AADC configuration. More than one AAD connector is not supported.&quot;
        ///}
        ///
        ///Get-ADSyncAADPasswordResetConfiguration -Connector ($connector.Name).
        /// </summary>
        internal static string Get_ADSyncAADPasswordResetConfiguration {
            get {
                return ResourceManager.GetString("Get-ADSyncAADPasswordResetConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to param($SourceConnector)
        ///
        ///Get-ADSyncAADPasswordSyncConfiguration -SourceConnector $SourceConnector.
        /// </summary>
        internal static string Get_ADSyncAADPasswordSyncConfiguration {
            get {
                return ResourceManager.GetString("Get-ADSyncAADPasswordSyncConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $state  = Get-ADSyncAutoUpgrade -Detail
        ///$props  = $state | GM | ? MemberType -like &quot;Property&quot;
        ///$result = New-Object PSObject
        ///$props | foreach {
        ///    $val = $state.($_.Name)
        ///    $result | Add-Member -MemberType NoteProperty -Name ($_.Name) -Value ([string]$val)
        ///}
        ///$result.
        /// </summary>
        internal static string Get_ADSyncAutoUpgrade {
            get {
                return ResourceManager.GetString("Get-ADSyncAutoUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to param ($Name)
        ///
        ///Import-Module ADSync;
        ///$param = @{}
        ///if ($Name) { $param.Add(&apos;Name&apos;, $Name) }
        ///$fmt_connectivity_params = @{
        ///    Name=&quot;ConnectivityParameters&quot;
        ///    Expression={
        ///        $val = New-Object PSObject
        ///        $_.ConnectivityParameters | foreach {
        ///            $p = $_
        ///            $val | Add-Member -MemberType NoteProperty -Name $p.Name -Value $p.Value
        ///        }
        ///        $val
        ///    }
        ///}
        ///$fmt_partition_params = @{
        ///    Name=&quot;Partitions&quot;
        ///    Expression={
        ///        $fmt_params = @{
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Get_ADSyncConnectorsBasic {
            get {
                return ResourceManager.GetString("Get-ADSyncConnectorsBasic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to param (
        ///    $connectorName, 
        ///    [ValidateRange(0, 99999)]
        ///    $startPage, 
        ///    [ValidateRange(1,250)]
        ///    $pageSize=100
        ///    )
        ///
        ///if (-not $connectorName) {
        ///    throw &quot;Connector name not specified. `$connectorName is a required parameter.&quot;
        ///}
        ///
        ///$startIndex = [Math]::Max(0, $startPage-1) * $pageSize
        ///
        ///$result = @(Get-ADSyncCSObject -ConnectorName &quot;$connectorName&quot; -StartIndex $startIndex -MaxResultCount $pageSize `
        ///    | select * -ExcludeProperty SerializedXml | foreach { $_ | ConvertTo-Json -Depth  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Get_ADSyncCSObjectPage {
            get {
                return ResourceManager.GetString("Get-ADSyncCSObjectPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to param (
        ///    [Parameter(Mandatory=$true)]
        ///    $ConnectorName,
        ///    [Parameter(Mandatory=$true)]
        ///    $DistinguishedName)
        ///
        ///try {
        ///Import-Module ADSync
        ///
        ///$attributes = @(
        ///&quot;ObjectId&quot;,
        ///&quot;ConnectorId&quot;,
        ///&quot;ConnectorName&quot;,
        ///&quot;ConnectorType&quot;,
        ///&quot;PartitionId&quot;,
        ///&quot;DistinguishedName&quot;,
        ///&quot;AnchorValue&quot;,
        ///&quot;ObjectType&quot;,
        ///&quot;IsTransient&quot;,
        ///&quot;IsPlaceHolder&quot;,
        ///&quot;IsConnector&quot;,
        ///&quot;HasSyncError&quot;,
        ///&quot;HasExportError&quot;,
        ///&quot;ExportError&quot;,
        ///&quot;SynchronizationError&quot;,
        ///&quot;ConnectedMVObjectId&quot;,
        ///&quot;Lineage&quot;,
        ///&quot;Attributes&quot;
        ///)
        ///
        ///Get-ADSyncCSObject -Co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Get_ADSyncCSObjectStrict {
            get {
                return ResourceManager.GetString("Get-ADSyncCSObjectStrict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to param ($ConnectorName)
        ///
        ///Get-ADSyncDomainReachabilityStatus -ConnectorName $ConnectorName.
        /// </summary>
        internal static string Get_ADSyncDomainReachabilityStatus {
            get {
                return ResourceManager.GetString("Get-ADSyncDomainReachabilityStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $global_config = Get-ADSyncGlobalSettings
        ///$parameters = @{}
        ///$global_config.Parameters | foreach {
        ///    $parameters.Add($_.Name, $_.Value)
        ///}
        ///
        ///New-Object PSObject -Property @{
        ///    Version = $global_config.Version
        ///    InstanceId = $global_config.InstanceId
        ///    SqlSchemaVersion = $global_config.SqlSchemaVersion
        ///    Parameters = $parameters
        ///}.
        /// </summary>
        internal static string Get_AdSyncGlobalSettingsStrict {
            get {
                return ResourceManager.GetString("Get-AdSyncGlobalSettingsStrict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to param (
        ///    [Parameter(Mandatory=$true)]
        ///    $Identifier
        ///    )
        ///
        ///Import-Module ADSync
        ///
        ///$attributes = @(
        ///&quot;ObjectId&quot;,
        ///&quot;Lineage&quot;,
        ///&quot;Attributes&quot;
        ///)
        ///
        ///Get-ADSyncMVObject -Identifier $Identifier | select $attributes.
        /// </summary>
        internal static string Get_ADSyncMVObjectStrict {
            get {
                return ResourceManager.GetString("Get-ADSyncMVObjectStrict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to param (
        ///    [Guid]
        ///    $Id,
        ///
        ///    [Guid]
        ///    $ConnectorId, 
        ///    
        ///    [int]
        ///    $NumberRequested,
        ///     
        ///    [bool]
        ///    $RunStepDetails=$false
        ///)
        ///
        ///
        ///$params = @{
        ///}
        ///
        ///if ($Id) { $params.Add(&apos;Id&apos;, $Id) }
        ///if ($ConnectorId) { $params.Add(&apos;ConnectorId&apos;, $ConnectorId) }
        ///if ($NumberRequested) { $params.Add(&apos;NumberRequested&apos;, $NumberRequested) }
        ///
        ///$lastHour = [DateTime]::UtcNow.AddHours(-1)
        ///
        ///Get-ADSyncRunProfileResult -RunStepDetails:$RunStepDetails @params | where { 
        ///    $_.StartDate -gt $lastHou [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Get_ADSyncRunProfileLastHour {
            get {
                return ResourceManager.GetString("Get-ADSyncRunProfileLastHour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to param (
        ///    [Parameter(Mandatory=$true)]
        ///    [string]
        ///    $ConnectorName
        ///)
        ///
        ///Get-ADSyncSchedulerConnectorOverride @PSBoundParameters.
        /// </summary>
        internal static string Get_ADSyncSchedulerConnectorOverride {
            get {
                return ResourceManager.GetString("Get-ADSyncSchedulerConnectorOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to param (
        ///    [Parameter(Mandatory=$true)]
        ///    [string]
        ///    $ConnectorName,
        ///    [Parameter(Mandatory=$true)]
        ///    [bool]
        ///    $FullImportRequired=$false,
        ///    [Parameter(Mandatory=$true)]
        ///    [bool]
        ///    $FullSyncRequired=$false
        ///)
        ///
        ///Set-ADSyncSchedulerConnectorOverride @PSBoundParameters.
        /// </summary>
        internal static string Set_ADSyncSchedulerConnectorOverride {
            get {
                return ResourceManager.GetString("Set-ADSyncSchedulerConnectorOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import-Module ADSync
        ///
        ///&lt;#
        ///Don&apos;t dispatch a sync if the last run was less than 10 minutes ago.
        ///#&gt;
        ///
        ///$lastRun = $null
        ///$lastRun = Get-ADSyncRunProfileResult | select -First 1
        ///$schedule = Get-ADSyncScheduler
        ///$threshold = 10
        ///
        ///$mostReccent = if ($lastRun.StartDate -gt $lastRun.EndDate) { $lastRun.StartDate } else { $lastRun.EndDate }
        ///
        ///$return = New-Object PSObject -Property @{
        ///    Result=&apos;&apos;
        ///    Started=$false
        ///}
        ///
        ///if (($schedule.SyncCycleEnabled) -and (-not $schedule.SyncCycleInProgress) -and ((-not [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Start_ADSyncDelta {
            get {
                return ResourceManager.GetString("Start-ADSyncDelta", resourceCulture);
            }
        }
    }
}
