@Scripts.Render("~/Scripts/VueComponents.js")
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--
    - [x] Show sync status
    - [ ] Show connectors you can see
        - [ ] Refresh
        - [ ] Show last password hash sync time
        - [ ] Show last time your connector was syncd
        - [ ] Enter DN, get MV info on user
    - [x] Start sync button
-->

<div id="server" class="row" style="padding-top:0.5em">
    <div class="col-3">
        <ul class="nav flex-column nav-pills" id="myTab" role="tablist">
            <!-- Sync Scheduler Nav Tab -->
            <li class="nav-item">
                <a class="nav-link active" id="sched-tab" data-toggle="tab" href="#syncScheduler" role="tab" aria-orientation="vertical" aria-controls="Sync Scheduler" aria-selected="true">Sync Scheduler</a>
            </li>

            <!-- Sync Connector Nav Tabs -->
            <li class="nav-item" v-for="(c) in connectors">
                <a class="nav-link" v-bind:id="'tab-' + c.Identifier" data-toggle="tab" v-bind:href="'#conn-' + c.Identifier" role="tab" v-bind:aria-controls="c.Name" aria-selected="false">{{c.Name}}</a>
            </li>
        </ul>
    </div>

    <div class="col-9">
        <div class="tab-content" id="myTabContent">

            <!-- Sync Scheduler Tab -->
            <div class="tab-pane fade show active" id="syncScheduler" role="tabpanel" aria-labelledby="sched-tab">
                <div class="container border">
                    <h3>Sync Scheduler</h3>
                    <table class="table table-responsive-sm">
                        <thead>
                            <tr><td></td><td></td></tr>
                        </thead>
                        <tbody>
                            <tr v-for="(value, key, i) in scheduler"> <td>{{ key }}</td><td>{{ value }}</td></tr>
                        </tbody>
                    </table>
                    <button id="syncBtn" type="button" class="btn btn-secondary" v-on:click="startSync" style="margin-bottom:12px;">Start Sync</button>
                    <div style="float:right">{{schedMsg}}</div>
                </div>
            </div>

            <!-- Sync Connector Tabs : will show 1 or more depending on your role -->
            <div class="tab-pane fade" v-for="(c) in connectors" v-bind:id="'conn-' + c.Identifier" role="tabpanel">
                <server-connector v-bind:connector="c"></server-connector>
            </div>


        </div>
    </div>
    <hr />
    <!--Global status messages show at bottom of page-->
    <div>{{statusMsg ? new Date().toLocaleTimeString() + " : " + statusMsg : ''}}</div>
</div>

<script type="text/x-template" id="server-connector-template">
    <div>
        <h3>{{connector.Name}}</h3>
        <table class="table table-responsive-sm">
            <thead>
                <tr><td></td><td></td></tr>
            </thead>
            <tbody>
                <tr v-for="(value, key, i) in connector"> <td>{{ key }}</td><td>{{ value }}</td></tr>
            </tbody>
        </table>
    </div>
</script>


<script type="text/javascript">

    // ---------------- Layout Modifications ----------------- //
    // Remove bottom <hr> from layout so we can put our own things below it
    setTimeout(() => {
        var footerLine = document.getElementById("footerLine");
        if (footerLine) { footerLine.remove(); }
    }, 250);

    // Make content full width since it's displaying settings that may be wider than the viewport
    var parent = document.getElementById('renderBody');
    parent.classList.remove('container')
    parent.classList.remove('container-fluid')

    // -----------------  Connector Component ------------------ //
    Vue.component('server-connector', {
        template: '#server-connector-template',
        props: ['connector'],
        data() {
            return {
                message: "Foo bar baz"
            }
        }
    });

    Vue.component('connector', {
        template: ''
    });

    // -----------------  Main Vue App ------------------ //
    const apiScheduler = "/api/Scheduler/";
    const apiStartSync = "/api/StartSync/";
    const apiConnector = "/api/Connector/"

    var server = new Vue({
        el: '#server',
        data: {
            something: "Here's it's still a thing",
            scheduler: {},
            schedMsg: "",
            statusMsg: "",
            connectors: {}
        },
        mounted: function () {
            this.fetchScheduler();
            this.fetchConnectors();
        },
        methods: {
            fetchScheduler() {
                var schedulerLoaded = false;

                $.getJSON(apiScheduler, json => {
                    this.scheduler = json;
                });
            },
            fetchConnectors() {
                $.getJSON(apiConnector, json => {
                    this.connectors = json;
                });
            },
            startSync() {
                this.schedMsg = '';

                $.post(apiStartSync).then(response => {
                    var btn = document.getElementById("syncBtn");
                    var btnClass = response.Started ? 'btn-success' : 'btn-warning';
                    btn.classList.remove('btn-secondary');
                    if (response.Started) {
                        btn.classList.remove('btn-warning');
                    } else {
                        btn.classList.remove('btn-success');
                    }
                    btn.classList.add(btnClass);

                    this.schedMsg = response.Result;
                })
            }
        }
    });

</script>
